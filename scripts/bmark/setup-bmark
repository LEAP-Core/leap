#!/usr/bin/env perl
# -*- perl -*-

##############################################################
#
# Benchmark setup for LEAP
#
# Usage: setup-bmark <bmark> <srcdir> <destdir>
#
# Setup benchmark to run in <destdir>
#
##############################################################

use strict;
use warnings;
use File::Basename;
use Getopt::Long;

sub Usage();
sub ErrorExit($);

#
# Turn on warnings
#
$^W = 1;

my $compare = undef;
my $data = undef;
my $group = undef;
my $linkto = undef;
my $feeder = ''; # Ununsed. For backwards compatability.

#
# Find the root of the benchmarks directory tree.
#
my $benchmark_root = `awb-resolver --config=benchmarkdir`;
chomp($benchmark_root);
ErrorExit("Can't find benchmark root") if ($benchmark_root eq '');

#
# Parse the command line switches
#
if (! GetOptions('compare=s' => \$compare,
                 'data=s' => \$data,
                 'group=s' => \$group,
                 'feeder=s' => \$feeder,
                 'linkto=s' => \$linkto,
                )) {
    Usage();
}

if ($#ARGV != 2) {
    Usage();
}

my $bmark = $ARGV[0];
my $srcdir = $ARGV[1];
my $dstdir = $ARGV[2];

print "BMARK: $bmark\n";
print "SRC: $srcdir\n";
print "DST: $dstdir\n";

if (! defined($group)) {
    $group = $bmark;
}

chdir($dstdir) or ErrorExit("Failed to cd to $dstdir");

mkdir('leap_debug') or ErrorExit("Failed to make 'leap_debug' directory");

# Copy input data files
if (defined($data)) {
    if ($data =~ /\.tar\.gz$/) {
        system("tar xzf ${data}");
    }
    elsif ($data =~ /\.tar$/) {
        system("tar xf ${data}");
    }
}

# Link to files or directories
if (defined($linkto)) {
    foreach my $tgt (split(':', $linkto)) {
        if ($tgt =~ /\/$/) {
            # Trailing slash means link to all the files individually within
            # a directory.
            if (-d $tgt) {
                opendir(DIR, $tgt) || die("Cannot open directory for --linkto $tgt\n");
                my @tgt_objs = readdir(DIR);
                closedir(DIR);
                foreach my $t (@tgt_objs) {
                    if (! (($t eq '.') || ($t eq '..'))) {
                        symlink("${tgt}${t}", basename($t)) or die("Failed to link to ${tgt}${t}");
                    }
                }
            }
        }
        else {
            # No trailing slash. Just link to a single object
            symlink($tgt, basename($tgt)) or die("Failed to link to $tgt");
        }
    }
}

# Store compare rules to config
open(ENV, '>>config/env.sh') or die("Failed to open config/env.sh");
if (defined($compare)) {
    print ENV "compare=\"${compare}\"\n";
}
close(ENV);

system("cp -f ${srcdir}/run.bmark run");
chmod(0755, "run");

exit(0);



sub Usage() {
    print STDERR "Usage: setup-bmark [--compare <compare commands>]\n";
    print STDERR "                   [--data <tar file>]\n";
    print STDERR "                   [--group <name>]\n";
    print STDERR "                   [--linkto <target0>:...:<targetN>]\n";
    print STDERR "                   <bmark> <srcdir> <dstdir>\n";
    exit(1);
}


sub ErrorExit($) {
    print STDERR @_ . "\n";
    exit(1);
}
